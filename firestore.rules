rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Allow users to read and write their own data
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isOwner(userId);
      allow delete: if false; // Prevent user deletion
    }
    
    // Allow authenticated users to read meal plans
    match /mealPlans/{mealPlanId} {
      allow read: if isAuthenticated();
    }
    
    // Allow users to read and write their own subscriptions
    match /subscriptions/{subscriptionId} {
      allow read: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      allow delete: if false; // Prevent subscription deletion
    }
    
    // Allow users to read and write their own orders
    match /orders/{orderId} {
      allow read: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      allow delete: if false; // Prevent order deletion
    }

    // Allow public access to user profiles for authentication
    match /userProfiles/{userId} {
      allow read: if true;
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }

    // Allow public access to authentication-related documents
    match /auth/{document=**} {
      allow read, write: if true;
    }
  }
} 